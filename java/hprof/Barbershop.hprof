JAVA PROFILE 1.0.1, created Sat Oct 06 11:04:09 2018

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=50000198, id = 200001, name="main", group="main")
THREAD START (obj=500001cf, id = 200004, name="barber", group="main")
THREAD START (obj=500001d4, id = 200005, name="Customer 0", group="main")
THREAD END (id = 200005)
THREAD START (obj=500001d5, id = 200006, name="Customer 1", group="main")
THREAD END (id = 200006)
THREAD START (obj=500001d6, id = 200007, name="Customer 2", group="main")
THREAD START (obj=500001d7, id = 200008, name="Customer 3", group="main")
THREAD START (obj=500001d8, id = 200009, name="Customer 4", group="main")
THREAD END (id = 200007)
THREAD START (obj=500001d9, id = 200010, name="Customer 5", group="main")
THREAD END (id = 200008)
THREAD END (id = 200009)
THREAD END (id = 200010)
THREAD START (obj=500001da, id = 200011, name="Customer 6", group="main")
THREAD START (obj=500001db, id = 200012, name="Customer 7", group="main")
THREAD END (id = 200011)
THREAD START (obj=500001dc, id = 200013, name="Customer 8", group="main")
THREAD END (id = 200012)
THREAD START (obj=500001dd, id = 200014, name="Customer 9", group="main")
THREAD START (obj=500001de, id = 200015, name="Customer 10", group="main")
THREAD END (id = 200013)
THREAD START (obj=500001df, id = 200016, name="Customer 11", group="main")
THREAD START (obj=500001e0, id = 200017, name="Customer 12", group="main")
THREAD END (id = 200014)
THREAD START (obj=500001e1, id = 200018, name="Customer 13", group="main")
THREAD END (id = 200015)
THREAD END (id = 200016)
THREAD START (obj=500001e2, id = 200019, name="Customer 14", group="main")
THREAD START (obj=500001e3, id = 200020, name="Customer 15", group="main")
THREAD START (obj=500001e4, id = 200021, name="Customer 16", group="main")
THREAD END (id = 200017)
THREAD START (obj=500001e5, id = 200022, name="Customer 17", group="main")
THREAD START (obj=500001e6, id = 200023, name="Customer 18", group="main")
THREAD END (id = 200023)
THREAD START (obj=500001e7, id = 200024, name="Customer 19", group="main")
THREAD END (id = 200024)
THREAD END (id = 200018)
THREAD END (id = 200019)
THREAD END (id = 200020)
THREAD START (obj=500001e8, id = 200025, name="Customer 20", group="main")
THREAD START (obj=500001e9, id = 200026, name="Customer 21", group="main")
THREAD START (obj=500001ea, id = 200027, name="Customer 22", group="main")
THREAD START (obj=500001eb, id = 200028, name="Customer 23", group="main")
THREAD END (id = 200028)
THREAD END (id = 200021)
THREAD END (id = 200022)
THREAD START (obj=500001ec, id = 200029, name="Customer 24", group="main")
THREAD START (obj=500001ed, id = 200030, name="Customer 25", group="main")
THREAD END (id = 200025)
THREAD START (obj=500001ee, id = 200031, name="Customer 26", group="main")
THREAD START (obj=500001ef, id = 200032, name="Customer 27", group="main")
THREAD END (id = 200032)
THREAD END (id = 200026)
THREAD END (id = 200027)
THREAD START (obj=500001f0, id = 200033, name="Customer 28", group="main")
THREAD START (obj=500001f1, id = 200034, name="Customer 29", group="main")
THREAD END (id = 200029)
THREAD START (obj=500001f2, id = 200035, name="Customer 30", group="main")
THREAD END (id = 200030)
THREAD START (obj=500001f3, id = 200036, name="Customer 31", group="main")
THREAD START (obj=500001f4, id = 200037, name="Customer 32", group="main")
THREAD END (id = 200037)
THREAD START (obj=500001f5, id = 200038, name="Customer 33", group="main")
THREAD END (id = 200038)
THREAD END (id = 200031)
THREAD START (obj=500001f6, id = 200039, name="Customer 34", group="main")
THREAD END (id = 200033)
THREAD START (obj=500001f7, id = 200040, name="Customer 35", group="main")
THREAD END (id = 200034)
THREAD END (id = 200035)
THREAD START (obj=500001f8, id = 200041, name="Customer 36", group="main")
THREAD END (id = 200036)
THREAD START (obj=500001f9, id = 200042, name="Customer 37", group="main")
THREAD END (id = 200039)
THREAD END (id = 200040)
THREAD START (obj=500001fa, id = 200043, name="Customer 38", group="main")
THREAD START (obj=500001fb, id = 200044, name="Customer 39", group="main")
THREAD START (obj=500001fc, id = 200045, name="Customer 40", group="main")
THREAD END (id = 200041)
THREAD START (obj=500001fd, id = 200046, name="Customer 41", group="main")
THREAD END (id = 200042)
THREAD END (id = 200043)
THREAD START (obj=500001fe, id = 200047, name="Customer 42", group="main")
THREAD END (id = 200044)
THREAD START (obj=500001ff, id = 200048, name="Customer 43", group="main")
THREAD END (id = 200045)
THREAD END (id = 200046)
THREAD START (obj=50000200, id = 200049, name="Customer 44", group="main")
THREAD END (id = 200047)
THREAD END (id = 200048)
THREAD START (obj=50000201, id = 200050, name="Customer 45", group="main")
THREAD START (obj=50000202, id = 200051, name="Customer 46", group="main")
THREAD START (obj=50000203, id = 200052, name="Customer 47", group="main")
THREAD END (id = 200049)
THREAD START (obj=50000204, id = 200053, name="Customer 48", group="main")
THREAD END (id = 200050)
THREAD END (id = 200051)
THREAD END (id = 200052)
THREAD START (obj=50000205, id = 200054, name="Customer 49", group="main")
THREAD END (id = 200053)
THREAD END (id = 200054)
THREAD START (obj=50000206, id = 200055, name="Customer 50", group="main")
THREAD END (id = 200055)
THREAD START (obj=50000207, id = 200056, name="Customer 51", group="main")
THREAD END (id = 200056)
THREAD START (obj=50000208, id = 200057, name="Customer 52", group="main")
THREAD START (obj=50000209, id = 200058, name="Customer 53", group="main")
THREAD END (id = 200057)
THREAD END (id = 200058)
THREAD START (obj=5000020a, id = 200059, name="Customer 54", group="main")
THREAD END (id = 200059)
THREAD START (obj=5000020b, id = 200060, name="Customer 55", group="main")
THREAD END (id = 200060)
THREAD START (obj=5000020c, id = 200061, name="Customer 56", group="main")
THREAD END (id = 200061)
THREAD START (obj=5000020d, id = 200062, name="Customer 57", group="main")
THREAD START (obj=5000020e, id = 200063, name="Customer 58", group="main")
THREAD START (obj=5000020f, id = 200064, name="Customer 59", group="main")
THREAD START (obj=50000210, id = 200065, name="Customer 60", group="main")
THREAD END (id = 200062)
THREAD START (obj=50000211, id = 200066, name="Customer 61", group="main")
THREAD END (id = 200063)
THREAD START (obj=50000212, id = 200067, name="Customer 62", group="main")
THREAD END (id = 200064)
THREAD START (obj=50000213, id = 200068, name="Customer 63", group="main")
THREAD END (id = 200065)
THREAD END (id = 200066)
THREAD START (obj=50000214, id = 200069, name="Customer 64", group="main")
THREAD START (obj=50000215, id = 200070, name="Customer 65", group="main")
THREAD END (id = 200067)
THREAD START (obj=50000216, id = 200071, name="Customer 66", group="main")
THREAD START (obj=50000217, id = 200072, name="Customer 67", group="main")
THREAD START (obj=50000218, id = 200073, name="Customer 68", group="main")
THREAD END (id = 200073)
THREAD END (id = 200068)
THREAD START (obj=50000219, id = 200074, name="Customer 69", group="main")
THREAD START (obj=5000021a, id = 200075, name="Customer 70", group="main")
THREAD END (id = 200075)
THREAD START (obj=5000021b, id = 200076, name="Customer 71", group="main")
THREAD END (id = 200076)
THREAD END (id = 200069)
THREAD END (id = 200070)
THREAD START (obj=5000021c, id = 200077, name="Customer 72", group="main")
THREAD START (obj=5000021d, id = 200078, name="Customer 73", group="main")
THREAD END (id = 200071)
THREAD END (id = 200072)
THREAD START (obj=5000021e, id = 200079, name="Customer 74", group="main")
THREAD START (obj=5000021f, id = 200080, name="Customer 75", group="main")
THREAD END (id = 200074)
THREAD END (id = 200077)
THREAD START (obj=50000220, id = 200081, name="Customer 76", group="main")
THREAD END (id = 200078)
THREAD START (obj=50000221, id = 200082, name="Customer 77", group="main")
THREAD END (id = 200079)
THREAD START (obj=50000222, id = 200083, name="Customer 78", group="main")
THREAD END (id = 200080)
THREAD START (obj=50000223, id = 200084, name="Customer 79", group="main")
THREAD END (id = 200081)
THREAD START (obj=50000224, id = 200085, name="Customer 80", group="main")
THREAD END (id = 200082)
THREAD START (obj=50000225, id = 200086, name="Customer 81", group="main")
THREAD START (obj=50000226, id = 200087, name="Customer 82", group="main")
THREAD END (id = 200083)
THREAD START (obj=50000227, id = 200088, name="Customer 83", group="main")
THREAD START (obj=50000228, id = 200089, name="Customer 84", group="main")
THREAD END (id = 200089)
THREAD START (obj=50000229, id = 200090, name="Customer 85", group="main")
THREAD END (id = 200090)
THREAD END (id = 200084)
THREAD START (obj=5000022a, id = 200091, name="Customer 86", group="main")
THREAD END (id = 200085)
THREAD END (id = 200086)
THREAD END (id = 200087)
THREAD START (obj=5000022b, id = 200092, name="Customer 87", group="main")
THREAD END (id = 200088)
THREAD END (id = 200091)
THREAD START (obj=5000022c, id = 200093, name="Customer 88", group="main")
THREAD START (obj=5000022d, id = 200094, name="Customer 89", group="main")
THREAD START (obj=5000022e, id = 200095, name="Customer 90", group="main")
THREAD END (id = 200092)
THREAD END (id = 200093)
THREAD START (obj=5000022f, id = 200096, name="Customer 91", group="main")
THREAD END (id = 200094)
THREAD START (obj=50000230, id = 200097, name="Customer 92", group="main")
THREAD START (obj=50000231, id = 200098, name="Customer 93", group="main")
THREAD END (id = 200095)
THREAD START (obj=50000232, id = 200099, name="Customer 94", group="main")
THREAD END (id = 200096)
THREAD END (id = 200097)
THREAD START (obj=50000233, id = 200100, name="Customer 95", group="main")
THREAD END (id = 200098)
THREAD START (obj=50000234, id = 200101, name="Customer 96", group="main")
THREAD END (id = 200099)
THREAD START (obj=50000235, id = 200102, name="Customer 97", group="main")
THREAD START (obj=50000236, id = 200103, name="Customer 98", group="main")
THREAD END (id = 200100)
THREAD END (id = 200001)
THREAD START (obj=50000238, id = 200105, name="Customer 99", group="main")
THREAD START (obj=50000237, id = 200104, name="DestroyJavaVM", group="main")
THREAD END (id = 200101)
THREAD END (id = 200102)
THREAD END (id = 200103)
THREAD END (id = 200105)
THREAD END (id = 200104)
TRACE 300097: (thread=200004)
	sun.misc.Unsafe.compareAndSwapLong(<Unknown Source>:Unknown line)
	java.util.concurrent.atomic.AtomicLong.compareAndSet(<Unknown Source>:Unknown line)
	java.util.Random.next(<Unknown Source>:Unknown line)
	java.util.Random.nextDouble(<Unknown Source>:Unknown line)
	java.lang.Math.random(<Unknown Source>:Unknown line)
	Barbershop.sleepThread(Barbershop.java:20)
	Barbershop$Barber.run(Barbershop.java:95)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300106: (thread=200001)
	java.security.AccessController.getInheritedAccessControlContext(<Unknown Source>:Unknown line)
	java.security.AccessControlContext.optimize(<Unknown Source>:Unknown line)
	java.security.AccessController.getContext(<Unknown Source>:Unknown line)
	java.lang.Thread.init(<Unknown Source>:Unknown line)
	java.lang.Thread.init(<Unknown Source>:Unknown line)
	java.lang.Thread.<init>(<Unknown Source>:Unknown line)
	Barbershop.main(Barbershop.java:40)
TRACE 300115: (thread=200004)
	java.lang.Thread.currentThread(<Unknown Source>:Unknown line)
	java.lang.Thread.interrupted(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.Semaphore.acquire(<Unknown Source>:Unknown line)
	Barbershop$Barber.run(Barbershop.java:91)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300091: (thread=200001)
	java.security.AccessController.getStackAccessControlContext(<Unknown Source>:Unknown line)
	java.security.AccessController.getContext(<Unknown Source>:Unknown line)
	java.lang.Thread.init(<Unknown Source>:Unknown line)
	java.lang.Thread.init(<Unknown Source>:Unknown line)
	java.lang.Thread.<init>(<Unknown Source>:Unknown line)
	Barbershop.main(Barbershop.java:40)
TRACE 300180: (thread=200089)
	java.lang.System.arraycopy(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:56)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300176: (thread=200086)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:65)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300173: (thread=200082)
	sun.misc.Unsafe.unpark(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.LockSupport.unpark(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.doReleaseShared(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.setHeadAndPropagate(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.Semaphore.acquire(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:66)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300168: (thread=200077)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.setHeadAndPropagate(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.Semaphore.acquire(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:72)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300163: (thread=200076)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:56)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300158: (thread=200001)
	java.lang.Thread.start0(<Unknown Source>:Unknown line)
	java.lang.Thread.start(<Unknown Source>:Unknown line)
	Barbershop.main(Barbershop.java:42)
TRACE 300155: (thread=200067)
	java.lang.Thread.isInterrupted(<Unknown Source>:Unknown line)
	java.lang.Thread.interrupted(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.Semaphore.acquire(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:75)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300187: (thread=200095)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:51)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300136: (thread=200004)
	sun.misc.Unsafe.unpark(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.LockSupport.unpark(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.doReleaseShared(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(<Unknown Source>:Unknown line)
	java.util.concurrent.Semaphore.release(<Unknown Source>:Unknown line)
	Barbershop$Barber.run(Barbershop.java:92)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300134: (thread=200001)
	java.lang.Thread.currentThread(<Unknown Source>:Unknown line)
	java.lang.Thread.init(<Unknown Source>:Unknown line)
	java.lang.Thread.init(<Unknown Source>:Unknown line)
	java.lang.Thread.<init>(<Unknown Source>:Unknown line)
	Barbershop.main(Barbershop.java:40)
TRACE 300133: (thread=200052)
	sun.misc.Unsafe.compareAndSwapLong(<Unknown Source>:Unknown line)
	java.util.concurrent.atomic.AtomicLong.compareAndSet(<Unknown Source>:Unknown line)
	java.util.Random.seedUniquifier(<Unknown Source>:Unknown line)
	java.util.Random.<init>(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:50)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300129: (thread=200049)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:65)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300123: (thread=200044)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:65)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300121: (thread=200043)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:65)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300118: (thread=200041)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.print(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:65)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300194: (thread=200101)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:65)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300195: (thread=200004)
	java.util.concurrent.locks.LockSupport.unpark(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.doReleaseShared(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(<Unknown Source>:Unknown line)
	java.util.concurrent.Semaphore.release(<Unknown Source>:Unknown line)
	Barbershop$Barber.run(Barbershop.java:92)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300197: (thread=200102)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:65)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300145: (thread=200001)
	java.lang.Thread.setPriority0(<Unknown Source>:Unknown line)
	java.lang.Thread.setPriority(<Unknown Source>:Unknown line)
	java.lang.Thread.init(<Unknown Source>:Unknown line)
	java.lang.Thread.init(<Unknown Source>:Unknown line)
	java.lang.Thread.<init>(<Unknown Source>:Unknown line)
	Barbershop.main(Barbershop.java:40)
TRACE 300095: (thread=200023)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:56)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300094: (thread=200001)
	java.lang.Object.getClass(<Unknown Source>:Unknown line)
	java.util.Arrays.copyOf(<Unknown Source>:Unknown line)
	java.lang.ThreadGroup.add(<Unknown Source>:Unknown line)
	java.lang.Thread.start(<Unknown Source>:Unknown line)
	Barbershop.main(Barbershop.java:42)
TRACE 300101: (thread=200027)
	java.lang.System.arraycopy(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:51)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300026: (thread=200001)
	java.io.FileOutputStream.close0(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.access$000(<Unknown Source>:Unknown line)
	java.io.FileOutputStream$1.close(<Unknown Source>:Unknown line)
	java.io.FileDescriptor.closeAll(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.close(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient.registerUsage(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient.setupAndTimestamp(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient.access$000(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient$4.run(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient$4.run(<Unknown Source>:Unknown line)
	java.security.AccessController.doPrivileged(<Unknown Source>:Unknown line)
	sun.usagetracker.UsageTrackerClient.run(<Unknown Source>:Unknown line)
	sun.misc.PostVMInitHook.trackJavaUsage(<Unknown Source>:Unknown line)
	sun.misc.PostVMInitHook.run(<Unknown Source>:Unknown line)
TRACE 300085: (thread=200001)
	java.lang.Integer.stringSize(<Unknown Source>:Unknown line)
	java.lang.AbstractStringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.Thread.<init>(<Unknown Source>:Unknown line)
	Barbershop.main(Barbershop.java:40)
TRACE 300081: (thread=200013)
	java.io.FileOutputStream.writeBytes(<Unknown Source>:Unknown line)
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown Source>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown Source>:Unknown line)
	java.io.PrintStream.newLine(<Unknown Source>:Unknown line)
	java.io.PrintStream.println(<Unknown Source>:Unknown line)
	Barbershop$Customer.run(Barbershop.java:51)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300072: (thread=200004)
	sun.misc.Unsafe.compareAndSwapObject(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetTail(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.Semaphore.acquire(<Unknown Source>:Unknown line)
	Barbershop$Barber.run(Barbershop.java:91)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300069: (thread=200004)
	java.lang.Class.getDeclaredFields0(<Unknown Source>:Unknown line)
	java.lang.Class.privateGetDeclaredFields(<Unknown Source>:Unknown line)
	java.lang.Class.getDeclaredField(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.LockSupport.<clinit>(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(<Unknown Source>:Unknown line)
	java.util.concurrent.Semaphore.acquire(<Unknown Source>:Unknown line)
	Barbershop$Barber.run(Barbershop.java:91)
	java.lang.Thread.run(<Unknown Source>:Unknown line)
TRACE 300045: (thread=200001)
	sun.misc.Perf.createLong(<Unknown Source>:Unknown line)
	sun.misc.PerfCounter.<init>(<Unknown Source>:Unknown line)
	sun.misc.PerfCounter.newPerfCounter(<Unknown Source>:Unknown line)
	sun.misc.PerfCounter$CoreCounters.<clinit>(<Unknown Source>:Unknown line)
	sun.misc.PerfCounter.getReadClassBytesTime(<Unknown Source>:Unknown line)
	java.net.URLClassLoader.defineClass(<Unknown Source>:Unknown line)
	java.net.URLClassLoader.access$100(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$1.run(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$1.run(<Unknown Source>:Unknown line)
	java.security.AccessController.doPrivileged(<Unknown Source>:Unknown line)
	java.net.URLClassLoader.findClass(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.checkAndLoadMain(<Unknown Source>:Unknown line)
CPU SAMPLES BEGIN (total = 37) Sat Oct 06 11:04:21 2018
rank   self  accum   count trace method
   1  8.11%  8.11%       3 300097 sun.misc.Unsafe.compareAndSwapLong
   2  5.41% 13.51%       2 300106 java.security.AccessController.getInheritedAccessControlContext
   3  5.41% 18.92%       2 300115 java.lang.Thread.currentThread
   4  5.41% 24.32%       2 300091 java.security.AccessController.getStackAccessControlContext
   5  2.70% 27.03%       1 300180 java.lang.System.arraycopy
   6  2.70% 29.73%       1 300176 java.io.FileOutputStream.writeBytes
   7  2.70% 32.43%       1 300173 sun.misc.Unsafe.unpark
   8  2.70% 35.14%       1 300168 java.util.concurrent.locks.AbstractQueuedSynchronizer.setHeadAndPropagate
   9  2.70% 37.84%       1 300163 java.io.FileOutputStream.writeBytes
  10  2.70% 40.54%       1 300158 java.lang.Thread.start0
  11  2.70% 43.24%       1 300155 java.lang.Thread.isInterrupted
  12  2.70% 45.95%       1 300187 java.io.PrintStream.newLine
  13  2.70% 48.65%       1 300136 sun.misc.Unsafe.unpark
  14  2.70% 51.35%       1 300134 java.lang.Thread.currentThread
  15  2.70% 54.05%       1 300133 sun.misc.Unsafe.compareAndSwapLong
  16  2.70% 56.76%       1 300129 java.io.FileOutputStream.writeBytes
  17  2.70% 59.46%       1 300123 java.io.FileOutputStream.writeBytes
  18  2.70% 62.16%       1 300121 java.io.FileOutputStream.writeBytes
  19  2.70% 64.86%       1 300118 java.io.FileOutputStream.writeBytes
  20  2.70% 67.57%       1 300194 java.io.FileOutputStream.writeBytes
  21  2.70% 70.27%       1 300195 java.util.concurrent.locks.LockSupport.unpark
  22  2.70% 72.97%       1 300197 java.io.FileOutputStream.writeBytes
  23  2.70% 75.68%       1 300145 java.lang.Thread.setPriority0
  24  2.70% 78.38%       1 300095 java.io.FileOutputStream.writeBytes
  25  2.70% 81.08%       1 300094 java.lang.Object.getClass
  26  2.70% 83.78%       1 300101 java.lang.System.arraycopy
  27  2.70% 86.49%       1 300026 java.io.FileOutputStream.close0
  28  2.70% 89.19%       1 300085 java.lang.Integer.stringSize
  29  2.70% 91.89%       1 300081 java.io.FileOutputStream.writeBytes
  30  2.70% 94.59%       1 300072 sun.misc.Unsafe.compareAndSwapObject
  31  2.70% 97.30%       1 300069 java.lang.Class.getDeclaredFields0
  32  2.70% 100.00%       1 300045 sun.misc.Perf.createLong
CPU SAMPLES END
